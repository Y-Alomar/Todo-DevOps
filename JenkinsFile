pipeline {
    agent any
    
    environment {
        DOCKER_HUB_REPO = 'yousefca'  // ⚠️ CHANGE THIS!
        AZURE_VM_IP = '172.179.173.132'              
        AZURE_VM_USER = 'azureuser'
    }
    
    stages {
        stage('Checkout') {
            steps {
                echo 'Pulling code from GitHub...'
                checkout scm
            }
        }
        
        stage('Build Docker Images') {
            steps {
                echo 'Building Docker images...'
                script {
                    // Use 'bat' for Windows instead of 'sh'
                    bat 'docker-compose build'
                }
            }
        }
        
        stage('Tag and Push Images') {
            steps {
                echo 'Tagging and pushing images...'
                script {
                    withCredentials([
                        string(credentialsId: 'dockerhub-username', variable: 'DOCKER_USER'),
                        string(credentialsId: 'dockerhub-token', variable: 'DOCKER_PASS')
                    ]) {
                        bat '''
                            echo %DOCKER_PASS% > pass.txt
                            type pass.txt | docker login -u %DOCKER_USER% --password-stdin
                            del pass.txt
                        '''
                        
                        bat """
                            docker tag my-todo-app-backend:latest %DOCKER_HUB_REPO%/todo-backend:latest
                            docker push %DOCKER_HUB_REPO%/todo-backend:latest
                            docker tag my-todo-app-frontend:latest %DOCKER_HUB_REPO%/todo-frontend:latest
                            docker push %DOCKER_HUB_REPO%/todo-frontend:latest
                        """
                    }
                }
            }
        }
        
        stage('Deploy to Azure VM') {
            steps {
                echo 'Deploying to Azure VM...'
                script {
                    sshagent(['azure-vm-ssh']) {
                        // Use bat for Windows SSH
                        bat """
                            ssh -o StrictHostKeyChecking=no %AZURE_VM_USER%@%AZURE_VM_IP% "cd todo-app && git pull origin main && docker-compose pull && docker-compose up -d --remove-orphans"
                        """
                    }
                }
            }
        }
    }
    
    post {
        success {
            echo '✅ Deployment successful!'
        }
        failure {
            echo '❌ Deployment failed!'
        }
        always {
            bat 'docker logout || exit 0'
        }
    }
}