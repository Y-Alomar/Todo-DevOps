pipeline {
    agent any
    
    environment {
        DOCKER_HUB_REPO = 'yousefca'
        AZURE_VM_IP = '172.179.173.132'              
    }
    
    stages {
        stage('Checkout') {
            steps {
                echo 'üì¶ Pulling code from GitHub...'
                checkout scm
            }
        }
        
        stage('Build Docker Images') {
            steps {
                echo 'üî® Building Docker images...'
                bat 'docker-compose build'
            }
        }
        
        stage('Login to Docker Hub') {
            steps {
                echo 'üîê Logging into Docker Hub...'
                script {
                    withCredentials([
                        string(credentialsId: 'dockerhub-username', variable: 'DOCKER_USER'),
                        string(credentialsId: 'dockerhub-token', variable: 'DOCKER_PASS')
                    ]) {
                        bat 'docker login -u %DOCKER_USER% -p %DOCKER_PASS%'
                    }
                }
            }
        }
        
        stage('Tag and Push Images') {
            steps {
                echo 'üè∑Ô∏è Tagging and pushing images...'
                bat """
                    docker tag my-todo-app-backend:latest %DOCKER_HUB_REPO%/todo-backend:latest
                    docker tag my-todo-app-frontend:latest %DOCKER_HUB_REPO%/todo-frontend:latest
                    docker push %DOCKER_HUB_REPO%/todo-backend:latest
                    docker push %DOCKER_HUB_REPO%/todo-frontend:latest
                """
            }
        }
        
        stage('Deploy to Azure VM') {
            steps {
                echo 'üöÄ Deploying to Azure VM...'
                script {
                    withCredentials([usernamePassword(
                        credentialsId: 'azure-vm-password',
                        usernameVariable: 'VM_USER',
                        passwordVariable: 'VM_PASS'
                    )]) {
                        // Use plink (PuTTY) for password auth
                        bat """
                            echo %VM_PASS% | plink -ssh -pw %VM_PASS% -batch %VM_USER%@%AZURE_VM_IP% "cd todo-app && git pull origin main && docker-compose pull && docker-compose up -d --remove-orphans"
                        """
                    }
                }
            }
        }
        
        stage('Verify Deployment') {
            steps {
                echo '‚úÖ Verifying deployment...'
                script {
                    withCredentials([usernamePassword(
                        credentialsId: 'azure-vm-password',
                        usernameVariable: 'VM_USER',
                        passwordVariable: 'VM_PASS'
                    )]) {
                        bat """
                            echo %VM_PASS% | plink -ssh -pw %VM_PASS% -batch %VM_USER%@%AZURE_VM_IP% "docker ps"
                        """
                    }
                }
            }
        }
    }
    
    post {
        success {
            echo '‚úÖ ========================================='
            echo '‚úÖ  DEPLOYMENT SUCCESSFUL! üéâ'
            echo '‚úÖ ========================================='
            echo '‚úÖ Docker Hub: https://hub.docker.com/u/%DOCKER_HUB_REPO%'
            echo '‚úÖ Live App: http://%AZURE_VM_IP%'
            echo '‚úÖ ========================================='
        }
        failure {
            echo '‚ùå Deployment failed! Check logs above.'
        }
        always {
            bat 'docker logout || exit 0'
        }
    }
}